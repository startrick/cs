{"version":3,"sources":["components/knowledge-base/knowledge-base-topic.js","components/knowledge-base/knowledge-base-view.js","components/knowledge-base/knowledge-base-content.js","App.js","index.js"],"names":["KnowledgeBaseTopicCollapsed","props","className","onClick","getSelectedTopic","helpTopic","id","fields","topic","KnowledgeBaseTopicExpanded","isCopied","event","copyToClipboard","dangerouslySetInnerHTML","__html","response","KnowledgeBaseView","helpTopics","map","selectedTopicId","KnowledgeBaseContent","getKnowledgeBaseContent","a","headers","axios","get","then","status","setState","data","records","textToCopy","target","innerText","navigator","clipboard","writeText","state","bind","this","React","Component","App","basename","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aeb56ac5.chunk.js","sourcesContent":["import React from 'react';\nimport '../../tailwind.output.css';\nimport {FiPlus, FiMinus} from 'react-icons/fi';\n\nfunction KnowledgeBaseTopicCollapsed(props){\n        return(\n        <div className='cursor-pointer p-4 border-b border-gray-200'  onClick={() => props.getSelectedTopic(props.helpTopic.id)}>\n            <div className='flex flex-row items-center justify-between font-light text-lg'>\n                <p className='text-gray-700'>{props.helpTopic.fields.topic}</p>\n                <p className='text-purple-600'><FiPlus/></p>\n            </div>\n        </div>\n    )\n}\n\nexport {KnowledgeBaseTopicCollapsed};\n\nfunction KnowledgeBaseTopicExpanded(props){\n        return(\n        <div className='bg-gray-50 border-b border-gray-200'>\n            <div className='cursor-pointer flex flex-row items-center justify-between font-light text-lg pb-2 pt-4 px-4' onClick={() => props.getSelectedTopic('')}>\n                <p className='text-gray-800'>{props.helpTopic.fields.topic}</p>\n                <p className='text-purple-600'><FiMinus/></p>\n            </div>\n            {props.isCopied\n            ? <div className='relative'>\n                {/* <p className='cursor-pointer text-gray-600 font-light text-base pb-6 px-4' onClick={(event) =>  props.copyToClipboard(event)}>{props.helpTopic.fields.response}</p> */}\n                <p className='cursor-pointer text-gray-600 font-light text-base pb-6 px-4' onClick={(event) =>  props.copyToClipboard(event)} dangerouslySetInnerHTML={{__html: props.helpTopic.fields.response}}></p>\n                <p className='w-full absolute bottom-0 text-xs bg-purple-600 text-white text-center font-light py-0.5'>Copied to clipboard</p>\n            </div>\n            // : <p className='cursor-pointer text-gray-600 font-light text-base pb-6 px-4' onClick={(event) =>  props.copyToClipboard(event)}>{props.helpTopic.fields.response}</p>\n            : <p className='cursor-pointer text-gray-600 font-light text-base pb-6 px-4' onClick={(event) =>  props.copyToClipboard(event)} dangerouslySetInnerHTML={{__html: props.helpTopic.fields.response}}></p>\n            }\n            {/* <p className='cursor-pointer text-gray-600 font-light text-base pb-4 px-4' onClick={(event) =>  props.copyToClipboard(event)}>{props.helpTopic.fields.response}</p> */}\n        </div>\n    )\n}\n\nexport {KnowledgeBaseTopicExpanded};","import React from 'react';\nimport '../../tailwind.output.css';\nimport {KnowledgeBaseTopicExpanded, KnowledgeBaseTopicCollapsed} from './knowledge-base-topic';\n\nfunction KnowledgeBaseView(props){\n    const helpTopics = props.helpTopics.map((helpTopic) => {\n        return(\n            props.selectedTopicId === helpTopic.id\n            ? <KnowledgeBaseTopicExpanded key={helpTopic.id} helpTopic={helpTopic} copyToClipboard={props.copyToClipboard} getSelectedTopic={props.getSelectedTopic} isCopied={props.isCopied}/>\n            : <KnowledgeBaseTopicCollapsed key={helpTopic.id} helpTopic={helpTopic} copyToClipboard={props.copyToClipboard} getSelectedTopic={props.getSelectedTopic}/>\n        )\n    }\n    )\n\n    return(\n        <div className='flex flex-col items-center mt-10 px-4'>\n            <div className='w-full sm:w-160'>\n                    <p className='text-4xl font-light text-gray-900 px-4'>Help Center</p>\n                    <p className='text-xl font-light pt-2 pb-4 text-gray-500 px-4'>Need answers? Find them here!</p>\n                    {helpTopics}\n            </div>\n        </div>\n    )\n}\n\nexport default KnowledgeBaseView;\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport KnowledgeBaseView from './knowledge-base-view';\n\nclass KnowledgeBaseContent extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            helpTopics: [],\n            textToCopy: '',\n            selectedTopicId: '',\n            isCopied: false,\n        }\n        this.getKnowledgeBaseContent = this.getKnowledgeBaseContent.bind(this);\n        this.copyToClipboard = this.copyToClipboard.bind(this);\n    }\n\n    getKnowledgeBaseContent = async() => {\n\n        let baseURL = \"https://api.airtable.com/v0/appZD9qRVCfSRenHA/Customer%20Support%20Queries\"\n        let headers = { 'authorization': \"Bearer key04kzdBL9zJQCwp\" }\n    \n        await axios.get(baseURL, {headers: headers})\n        .then((response) => {\n            if(response.status===200){\n                this.setState({\n                    helpTopics: response.data.records,\n                    isCopied: false,\n                })\n            }\n        }\n        )\n    }\n\n    getSelectedTopic = async(selectedTopicId) => {\n        await this.setState({\n            selectedTopicId: selectedTopicId,\n            isCopied: false,\n        })\n    }\n\n    copyToClipboard = async(event) => {\n        // console.log(event.target.innerText);\n        await this.setState({\n            textToCopy: event.target.innerText,\n            isCopied: true,\n        });\n        navigator.clipboard.writeText(this.state.textToCopy);\n    }\n\n    componentDidMount(){\n        this.getKnowledgeBaseContent();\n    }\n\n    render(){\n        return(\n            <div>\n                <KnowledgeBaseView helpTopics={this.state.helpTopics} copyToClipboard={this.copyToClipboard} selectedTopicId={this.state.selectedTopicId} getSelectedTopic={this.getSelectedTopic} isCopied={this.state.isCopied}/>\n            </div>\n        )\n    }\n}\n\nexport default KnowledgeBaseContent;","import React from 'react';\nimport './tailwind.output.css';\n\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport KnowledgeBaseContent from './components/knowledge-base/knowledge-base-content';\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      {/* <Router>\n        <Suspense fallback={<div>Loading...</div>}> */}\n          <Switch>\n            <Route exact path='/' component={KnowledgeBaseContent}/>\n          </Switch>\n        {/* </Suspense>\n      </Router> */}\n    </HashRouter>\n      \n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router> \n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}